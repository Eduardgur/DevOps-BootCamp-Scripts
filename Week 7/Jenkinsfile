pipeline {
    agent {
        label 'ansible'
    }

    stages {
        stage('Get Vars') {
            options {
                azureKeyVault(
                  credentialID: 'azure-service-principal',
                  keyVaultURL: 'https://wt-vault.vault.azure.net/',
                  secrets: [
                      [envVariable: 'FRONT_PORT', name: 'FRONT-PORT', secretType: 'Secret'],
                      [envVariable: 'OKTA_URL', name: 'DEV-OKTA-URL', secretType: 'Secret'],
                      [envVariable: 'OKTA_ID', name: 'DEV-OKTA-ID', secretType: 'Secret'],
                      [envVariable: 'OKTA_SECRET', name: 'DEV-OKTA-SECRET', secretType: 'Secret'],
                      [envVariable: 'DB_PASS', name: 'VmPass', secretType: 'Secret'],
                      [envVariable: 'DB_USER', name: 'VmName', secretType: 'Secret'],
                      [envVariable: 'DB_PORT', name: 'DB-PORT', secretType: 'Secret']
                  ]
                )
            }

            steps {

            }
        }

        stage('Clone Git') {
            steps {
                git branch: 'main', changelog: false, credentialsId: 'git-ssh', poll: false, url: 'git@github.com:Eduardgur/WeightTrackerTst.git'
            }
        }

        stage('Get Dependecies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build Image') {
            steps {
                sh 'rm -rf .git .gitignore README.md'
                sh 'docker build -t eduardgu/weighttracker:1.0 .'
            }
        }

        stage('Push Image') {
            steps {
                sh 'docker push eduardgu/weighttracker:1.0'
            }
        }
    // stage('Build') {
    //     steps {
    //         git branch: 'main', changelog: false, credentialsId: 'git-ssh', poll: false, url: 'git@github.com:Eduardgur/AnsibleFiles.git'
    //     }
    // }
    }

// post {
// success {
//     azureUpload containerName: 'jenkinsblob', doNotUploadIndividualFiles: true, filesPath: '**/*', excludeFilesPath: '.git, .gitignore, README.md, Jenkinsfile' , storageCredentialId: 'AzureStorage', storageType: 'blobstorage', uploadArtifactsOnlyIfSuccessful: true, uploadZips: true
// }
// cleanup {
//     sh "rm -R -f ./**"
// }
// }
}
