---
- name: Dev
  hosts: "{{hosts}}"
  become: true
  vars:
    default_container_name: weighttracker
    default_container_image: eduardgu/weighttracker:{{ phase }}
    # ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Check if docker exists
      package:
        name: docker-ce
        state: present
      check_mode: true
      ignore_errors: yes
      register: docker_check

    # - name: Upgrade all apt packages
    #   apt: upgrade=dist force_apt_get=yes

    - name: Upgrade all apt packages
      shell: apt-get update -y && apt update -y

    - name: Instal Docker dependencies
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: latest
        update_cache: true
      #when: not docker_check.changed

    - name: Add Docekr GPG
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      #when: not docker_check.changed

    - name: Add Docker repository 
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    # - name: Upgrade all apt packages
    #   apt: upgrade=dist force_apt_get=yes
      # #when: not docker_check.changed

    - name: Upgrade all apt packages
      shell: apt-get update -y && apt update -y

    - name: Install Docker
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
        update_cache: true
      # #when: not docker_check.changed

    - name: Remove old containers
      shell: sudo docker container rm -vf $(sudo docker container ls -aq)
      ignore_errors: yes  

    - name: Remove old images  
      shell: sudo docker image rmi -f $(sudo docker image ls -aq)
      ignore_errors: yes
    
    - name: Run Image  
      shell: sudo docker run -d --name {{ default_container_name }} -p 8080:8080 --restart unless-stopped {{ default_container_image }}

