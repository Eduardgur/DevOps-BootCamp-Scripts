---
- name: Dev
  hosts: "{{hosts}}"
  become: true
  vars:
    default_container_name: weighttracker
    default_container_image: eduardgu/weighttracker:"{{ phase }}"
    # ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Check if docker exists
      package:
        name: docker-ce
        state: present
      check_mode: true
      ignore_errors: yes
      register: docker_check

    - name: Upgrade all apt packages
      apt: upgrade=dist force_apt_get=yes

    - name: Instal Docker dependencies
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: latest
        update_cache: true
      #when: not docker_check.changed

    - name: Get Docekr GPG
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --batch --yes --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      #when: not docker_check.changed

    - name: Set Repository
      shell: echo \
        "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      #when: not docker_check.changed

    - name: Upgrade all apt packages
      apt: upgrade=dist force_apt_get=yes
      # #when: not docker_check.changed

    - name: Install Docker
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
        update_cache: true
      # #when: not docker_check.changed

    # - name: Switch to python3
    #   shell: sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2 && sudo update-alternatives  --set python /usr/bin/python3.6
    #   ignore_errors: yes

    - name: Remove old images  
      shell: sudo docker image rmi -f $(sudo docker image ls -aq)
      ignore_errors: yes

    - name: Remove old containers
      shell: sudo docker container rm -vf $(sudo docker container ls -aq)
      ignore_errors: yes      

    - name: Run Image  
      shell: sudo docker run -d --name {{ default_container_name }} -p 8080:8080 {{ default_container_image }}
    # - name: Pull Image
    #   docker_image:
    #     name: "{{ default_container_image }}"
    #     source: pull

    # - name: Run Container
    #   docker_container:
    #     name: "{{ default_container_name }}"
    #     image: "{{ default_container_image }}"
    #     ports:
    #       - "8080:8080"
    #     recreate: yes
    #     force_kill: yes
